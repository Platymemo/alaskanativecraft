plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "com.modrinth.minotaur" version "1.2.1"
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        url = "https://maven.fabricmc.net"
    }
    maven {
        url = "https://maven.terraformersmc.com/releases"
    }
    maven {
        url = "https://maven.shedaniel.me"
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Mod Menu integration
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

    // REI integration
    modCompileOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"

    // ClothConfig
    modApi("me.shedaniel.cloth:cloth-config-fabric:${project.clothconfig_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.
}

loom {
    accessWidenerPath = file("src/main/resources/alaskanativecraft.accesswidener")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // Select the repositories you want to publish to
    // To publish to maven local, no extra repositories are necessary. Just use the task `publishToMavenLocal`.
    repositories {
        // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    }
}

/*import com.modrinth.minotaur.TaskModrinthUpload
import com.modrinth.minotaur.request.Dependency

task publishModrinth (type: TaskModrinthUpload) {
    onlyIf {
        System.getenv("MODRINTH")
    }

    token = System.getenv("MODRINTH")
    projectId = 'iFnEtHsI'
    versionName = "Alaska Native Craft v${project.mod_version}"
    versionNumber = "${project.mod_version}"
    uploadFile = remapJar
    changelog = new File("markdown/versions/${project.mod_version}.md").getText('UTF-8')
    addGameVersion('1.19')
    addDependency('fabric-api', Dependency.DependencyType.REQUIRED)
    addDependency('cloth-config', Dependency.DependencyType.REQUIRED)
    addLoader('fabric')
}*/

curseforge {
    if (project.hasProperty("curse_api_key") || System.getenv("curse_api_key") != null) {
        apiKey = project.hasProperty("curse_api_key") ? project.property("curse_api_key") : System.getenv("curse_api_key")

        project {
            id = '435197'
            changelogType = 'markdown'
            changelog = file("markdown/versions/${project.mod_version}.md")
            releaseType = 'release'
            addGameVersion "1.19"
            addGameVersion "Java 17"
            addGameVersion "Fabric"
            relations {
                requiredDependency 'cloth-config'
                requiredDependency 'fabric-api'
                optionalDependency 'modmenu'
            }

            mainArtifact(remapJar.archivePath) {
                displayName = "Alaska Native Craft v${project.mod_version}"
            }

            afterEvaluate {
                uploadTask.dependsOn(remapJar)
            }
        }

        options {
            javaVersionAutoDetect = false
            forgeGradleIntegration = false
        }
    }
}
