plugins {
	id 'fabric-loom' version '0.8-SNAPSHOT'
	id 'io.github.juuxel.loom-quiltflower' version '1.3.0'
	id "com.matthewprenger.cursegradle" version "1.4.0"
	id "com.modrinth.minotaur" version "1.2.1"
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		url = "https://maven.fabricmc.net"
	}
	maven {
		url = "https://maven.terraformersmc.com/releases"
	}
	maven {
		url = "https://maven.shedaniel.me"
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Mod Menu integration
	modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

	// REI integration
	 modImplementation "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"

	// ClothConfig
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.clothconfig_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
}

minecraft {
	accessWidener "src/main/resources/alaskanativecraft.accesswidener"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	// Minecraft 1.17 (21w19a) upwards uses Java 16.
	it.options.release = 16
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// Select the repositories you want to publish to
	// To publish to maven local, no extra repositories are necessary. Just use the task `publishToMavenLocal`.
	repositories {
		// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	}
}

curseforge {
	if (project.hasProperty("curse_api_key") || System.getenv("curse_api_key") != null) {
		apiKey = project.hasProperty("curse_api_key") ? project.property("curse_api_key") : System.getenv("curse_api_key")

		project {
			id = '435197'
			changelogType = 'markdown'
			changelog = file("markdown/CHANGELOG.md")
			releaseType = 'release'
			addGameVersion "1.17-Snapshot"
			addGameVersion "1.17.1"
			addGameVersion "1.17"
			addGameVersion "Java 17"
			addGameVersion "Fabric"
			relations {
				requiredDependency 'cloth-config'
				requiredDependency 'fabric-api'
				optionalDependency 'modmenu'
			}

			mainArtifact(remapJar.archivePath) {
				displayName = "Alaska Native Craft v${project.mod_version}"
			}

			afterEvaluate {
				uploadTask.dependsOn(remapJar)
			}
		}

		options {
			javaVersionAutoDetect = false
			forgeGradleIntegration = false
		}
	}
}

import com.modrinth.minotaur.TaskModrinthUpload

task publishModrinth (type: TaskModrinthUpload){ // Make sure it runs after build!
	onlyIf {
		System.getenv("MODRINTH") // Only attempt to run this task if the MODRINTH variable is set, otherwise SKIP it
	}

	token = System.getenv("MODRINTH") // An environment property called MODRINTH that is your token, set via Gradle CLI, GitHub Actions, Idea Run Configuration, or other
	projectId = 'iFnEtHsI'
	versionName = "Alaska Native Craft v${project.mod_version}"
	versionNumber = "${project.mod_version}" // Will fail if Modrinth has this version already
	// On fabric, use 'remapJar' instead of 'jar'
	uploadFile = remapJar
	changelog = file("markdown/CHANGELOG.md").getText('UTF-8')
	addGameVersion('1.17') // Call this multiple times to add multiple game versions. There are tools that can help you generate the list of versions
	addGameVersion('1.17.1')
	addLoader('fabric')
}
